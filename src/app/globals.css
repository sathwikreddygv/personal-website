@tailwind base;
@tailwind components;
@tailwind utilities;

/* :root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
} */

:root {
	/* Your default theme */
	--background: white;
	--foreground: black;
  }
  
  [data-theme='dark'] {
	--background: black; /* #22232a */
	--foreground: white;
  }

body {
position: relative;
  color: rgb(var(--foreground));
  background: black
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

.cp{
	cursor: pointer;
}

@keyframes sticky-parallax-header-move-and-size {
	from {
		top: 1rem;
		width: 100vw;
		font-size: 20px;
		/* border: 1px solid black; */
		opacity: 0;
	}
	to {
		top: 1rem;
		width: 40vw;
		font-size: 14px;

		opacity: 1;
	}
}

#sticky-parallax-header {
	position: fixed;
	top: 4;

	animation: sticky-parallax-header-move-and-size linear forwards;
	animation-timeline: scroll();
	animation-range: 0vh 90vh;
}

#scroll-icon {
	animation: scroll-icon 1.8s ease infinite;
}

@keyframes scroll-icon {
    0%{
        opacity: 0;
        transform: translate(-0px,-10px);
    }
    50%{
        opacity: 1;
    }
    100%{
        opacity: 0;
        transform: translate(0px,50px);
    }
}

:root {
	--card-height: 40vw;
	--card-margin: 7vw;
	--card-top-offset: 1em;
	--numcards: 4;
	--outline-width: 0px;
}

@supports (animation-timeline: view()) {
	.card {
		--index0: calc(var(--index) - 1); /* 0-based index */
		--reverse-index: calc(var(--numcards) - var(--index0)); /* reverse index */
		--reverse-index0: calc(var(--reverse-index) - 1); /* 0-based reverse index */
	}

	@keyframes scale {
		to {
			transform:
				scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
		}
	}

	#cards {
		--numcards: 4;
		view-timeline-name: --cards-element-scrolls-in-body;
	}

	.card__content {
		--start-range: calc(var(--index0) / var(--numcards) * 100%);
		--end-range: calc((var(--index)) / var(--numcards) * 100%);

		animation: linear scale forwards;
		animation-timeline: --cards-element-scrolls-in-body;
		animation-range: exit-crossing var(--start-range) exit-crossing var(--end-range);
	}
}

#cards {
	/* Make place at bottom, as items will slide to that position*/
	padding-bottom: calc(var(--numcards) * var(--card-top-offset));
	/* Don't include the --card-margin in padding, as that will affect the scroll-timeline*/
	margin-bottom: var(--card-margin);
}

#card_1 {
	--index: 1;
}

#card_2 {
	--index: 2;
}

#card_3 {
	--index: 3;
}

#card_4 {
	--index: 4;
}

.card {
	position: sticky;
	top: 0;
	padding-top: calc(var(--index) * var(--card-top-offset) + 3em);
}

.card__content {
	transform-origin: 50% 0%;
	will-change: transform;
}

/** DEBUG **/

#debug {
  position: fixed;
  top: 1em;
  left: 1em;
}
#debug::after {
  content: " Show Debug";
  margin-left: 1.5em;
  color: white;
  white-space: nowrap;
}

#debug:checked ~ main {
  --outline-width: 1px;
}


/** PAGE STYLING **/

main * { /* Poor Man's Reset */
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

body {
	/* color: rgb(255, 255, 255); */

	font-size: calc(1em + 0.5vw);
}

header,
main {
	width: 80vw;
	margin: 0 auto;
	text-align: center;
}

header {
	height: 100vh;
	display: grid;
	place-items: center;
}

#cards {
	list-style: none;
	outline: calc(var(--outline-width) * 10) solid hotpink;

	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: repeat(var(--numcards), var(--card-height));
	gap: var(--card-margin);
}

.card {
	outline: var(--outline-width) solid lime;
}

.card__content {
	box-shadow: 0 0.2em 1em rgba(0, 0, 0, 0.1), 0 1em 2em rgba(0, 0, 0, 0.1);
	background: rgb(255, 255, 255);
	color: rgb(10, 5, 7);
	border-radius: 1em;
	overflow: hidden;

	display: grid;
	grid-template-areas: "text img";
	grid-template-columns: 1fr 1fr;
	grid-template-rows: auto;

	align-items: stretch;
	outline: var(--outline-width) solid blue;
}

.card__content > div {
	grid-area: text;
	width: 80%;
	place-self: center;
	text-align: left;

	display: grid;
	gap: 1em;
	place-items: start;
}

.card__content > figure {
	grid-area: img;
	overflow: hidden;
}

.card__content > figure > img {
	width: 100%;
	height: 100%;
	object-fit: cover;
}

main h1 {
	font-weight: 300;
	font-size: 3.5em;
}

main h2 {
	font-weight: 300;
	font-size: 2.5em;
}

main p {
	font-family: sans-serif;
	font-weight: 300;
	line-height: 1.42;
}

aside {
	width: 50vw;
	margin: 0 auto;
	text-align: left;
}

aside p {
	margin-bottom: 1em;
}

/* Position warning box */
.warning {
	position: fixed;
	bottom: 1rem;
	left: 1rem;
	right: 1rem;
	width: max-content;
	text-align: center;
	max-width: 90vw;
	margin: auto;
	z-index: 2;
	font-size: 0.8em;
	color: #333;
}

.revealing-image {
	/* Create View Timeline */
	view-timeline-name: --revealing-image;
	view-timeline-axis: block;

	/* Attach animation, linked to the  View Timeline */
	animation: linear reveal both;
	animation-timeline: --revealing-image;

	/* Tweak range when effect should run*/
	animation-range: entry 0% cover 25%;
}

@keyframes reveal {
	from {
		opacity: 1s;
		clip-path: inset(0% 20% 0% 20%);
	}
	to {
		opacity: 1;
		clip-path: inset(0% 0% 0% 0%);
	}
}

.revealing-image-from-left {
	/* Create View Timeline */
	view-timeline-name: --revealing-image-from-left;
	view-timeline-axis: block;

	/* Attach animation, linked to the  View Timeline */
	animation: linear reveal-from-left both;
	animation-timeline: --revealing-image-from-left;

	/* Tweak range when effect should run*/
	animation-range: entry 25% cover 25%;
}

@keyframes reveal-from-left {
	from {
		opacity: 0;
		transform: translate(200px);
	}
	to {
		opacity: 1;
		transform: translate(0px);
	}
}

.revealing-image-from-right {
	/* Create View Timeline */
	view-timeline-name: --revealing-image-from-right;
	view-timeline-axis: block;

	/* Attach animation, linked to the  View Timeline */
	animation: linear reveal-from-right both;
	animation-timeline: --revealing-image-from-right;

	/* Tweak range when effect should run*/
	animation-range: entry 25% cover 25%;
}

@keyframes reveal-from-right {
	from {
		opacity: 0;
		transform: translate(-200px);
	}
	to {
		opacity: 1;
		transform: translate(0px);
	}
}

.revealing-image-from-top {
	/* Create View Timeline */
	view-timeline-name: --revealing-image-from-top;
	view-timeline-axis: block;

	/* Attach animation, linked to the  View Timeline */
	animation: linear reveal-from-top both;
	animation-timeline: --revealing-image-from-top;

	/* Tweak range when effect should run*/
	animation-range: entry 60% cover 60%;
}

@keyframes reveal-from-top {
	from {
		opacity: 0;
		transform: translate(0px, -200px);
	}
	to {
		opacity: 1;
		transform: translate(0px);
	}
}

.revealing-image-from-bottom {
	/* Create View Timeline */
	view-timeline-name: --revealing-image-from-bottom;
	view-timeline-axis: block;

	/* Attach animation, linked to the  View Timeline */
	animation: linear reveal-from-bottom both;
	animation-timeline: --revealing-image-from-bottom;

	/* Tweak range when effect should run*/
	animation-range: entry 25% cover 25%;
}

@keyframes reveal-from-bottom {
	from {
		opacity: 0;
		transform: translate(0px, 200px);
	}
	to {
		opacity: 1;
		transform: translate(0px);
	}
}

:root {
    --translate-distance: 150px; /* Default distance for desktop */
}

@media (max-width: 600px) {
    :root {
        --translate-distance: 150px; /* Distance for phone */
    }
}


.circle {
    position: relative;
}

.item {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    animation: rotate-items 20s linear infinite;
}

.item:nth-child(1) { 
    transform: rotate(0deg) translate(var(--translate-distance)) rotate(0deg); 
    animation-delay: 0s; 
}
.item:nth-child(2) { 
    transform: rotate(51.43deg) translate(var(--translate-distance)) rotate(-51.43deg); 
    animation-delay: -2.8571s; 
}
.item:nth-child(3) { 
    transform: rotate(102.86deg) translate(var(--translate-distance)) rotate(-102.86deg); 
    animation-delay: -5.7143s; 
}
.item:nth-child(4) { 
    transform: rotate(154.29deg) translate(var(--translate-distance)) rotate(-154.29deg); 
    animation-delay: -8.5714s; 
}
.item:nth-child(5) { 
    transform: rotate(205.71deg) translate(var(--translate-distance)) rotate(-205.71deg); 
    animation-delay: -11.4286s; 
}
.item:nth-child(6) { 
    transform: rotate(257.14deg) translate(var(--translate-distance)) rotate(-257.14deg); 
    animation-delay: -14.2857s; 
}
.item:nth-child(7) { 
    transform: rotate(308.57deg) translate(var(--translate-distance)) rotate(-308.57deg); 
    animation-delay: -17.1429s; 
}

@keyframes rotate-items {
    0% {
        transform: rotate(0deg) translateX(var(--translate-distance)) rotate(0deg);
    }
    14.29% {
        transform: rotate(51.43deg) translateX(var(--translate-distance)) rotate(-51.43deg);
    }
    28.57% {
        transform: rotate(102.86deg) translateX(var(--translate-distance)) rotate(-102.86deg);
    }
    42.86% {
        transform: rotate(154.29deg) translateX(var(--translate-distance)) rotate(-154.29deg);
    }
    57.14% {
        transform: rotate(205.71deg) translateX(var(--translate-distance)) rotate(-205.71deg);
    }
    71.43% {
        transform: rotate(257.14deg) translateX(var(--translate-distance)) rotate(-257.14deg);
    }
    85.71% {
        transform: rotate(308.57deg) translateX(var(--translate-distance)) rotate(-308.57deg);
    }
    100% {
        transform: rotate(360deg) translateX(var(--translate-distance)) rotate(-360deg);
    }
}

.flex-center{
	display: flex;
	align-items: center;
	justify-content: center;
}

.flex-between{
	display: flex;
	align-items: center;
	justify-content: space-between;
}